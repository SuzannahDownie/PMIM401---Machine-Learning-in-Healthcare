heart <- read.csv("heart-c.csv")
# create new dataframe with only continuous variables for kmeans and remove
# the index
heart <- heart %>% select(age, trestbps, chol,
thalach, oldpeak)
# create histograms of continuous data
heart %>% gather(attribute, value, 1:ncol(heart)) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "salmon1", color = "black") +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# visualise the sum of squared error to determine the initial
# optimum no. of clusters
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = "wss") +
geom_vline(xintercept = 2, linetype = 2) +
geom_vline(xintercept = 5, linetype = 2)
# normalise the data so as it sits within a similar range
heart_norm <- scale(heart) %>% as.data.frame
# visualise the silhouette scores to support elbow plot above
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = 'silhouette')
kmeans_5 <- kmeans(heart_norm, centers = 5)
# run kmeans with 2 clusters and with 5
kmeans_2 <- kmeans(heart_norm, centers = 2)
# visualise both models in 2D
fviz_cluster(kmeans_2, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 2 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
fviz_cluster(kmeans_5, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 5 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
# add cluster values to dataframes as factors
# Two Clusters
heart_clust_2 <- cbind(heart, 'Cluster' = kmeans_2$cluster)
heart_clust_2$Cluster <- as.factor(heart_clust_2$Cluster)
# Five Clusters
heart_clust_5 <- cbind(heart, 'Cluster' = kmeans_5$cluster)
heart_clust_5$Cluster <- as.factor(heart_clust_5$Cluster)
# plot histograms to show distribution across the clusters
heart_clust_2 %>% gather(attribute, value, 1:ncol(heart_clust_2)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# Hierarchical Clustering
library(dendextend)
heart_clust_5 %>% gather(attribute, value, 1:ncol(heart_clust_5)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
library(cluster)
dist_mat <- as.matrix(dist_mat)
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
# create distance matrix
dist_mat <- dist(heart_norm, method = "euclidean")
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = 'silhouette')
dist_mat <- c(dist_mat)
hir_clust <- hclust(dist_mat, method = 'single')
plot(hir_clust, cex = 0.6, hang = -1)
cut <- cutree(hir_clust, k = 8)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 23, col = 'blue')
library(tidyverse)
library(factoextra)
# read in the dataset
heart <- read.csv("heart-c.csv")
# create new dataframe with only continuous variables for kmeans and remove
# the index
heart <- heart %>% select(age, trestbps, chol,
thalach, oldpeak)
# create histograms of continuous data
heart %>% gather(attribute, value, 1:ncol(heart)) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "salmon1", color = "black") +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# normalise the data so as it sits within a similar range
heart_norm <- scale(heart) %>% as.data.frame
# visualise the sum of squared error to determine the initial
# optimum no. of clusters
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = "wss") +
geom_vline(xintercept = 2, linetype = 2) +
geom_vline(xintercept = 5, linetype = 2)
# visualise the silhouette scores to support elbow plot above
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = 'silhouette')
# run kmeans with 2 clusters and with 5
kmeans_2 <- kmeans(heart_norm, centers = 2)
kmeans_5 <- kmeans(heart_norm, centers = 5)
# visualise both models in 2D
fviz_cluster(kmeans_2, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 2 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
fviz_cluster(kmeans_5, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 5 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
# add cluster values to dataframes as factors
# Two Clusters
heart_clust_2 <- cbind(heart, 'Cluster' = kmeans_2$cluster)
heart_clust_2$Cluster <- as.factor(heart_clust_2$Cluster)
# Five Clusters
heart_clust_5 <- cbind(heart, 'Cluster' = kmeans_5$cluster)
heart_clust_5$Cluster <- as.factor(heart_clust_5$Cluster)
# plot histograms to show distribution across the clusters
heart_clust_2 %>% gather(attribute, value, 1:ncol(heart_clust_2)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
heart_clust_5 %>% gather(attribute, value, 1:ncol(heart_clust_5)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# Hierarchical Clustering
library(dendextend)
library(cluster)
# create distance matrix
dist_mat <- dist(heart_norm, method = "euclidean")
dist_mat <- as.matrix(dist_mat)
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = 'silhouette')
dist_mat <- c(dist_mat)
hir_clust <- hclust(dist_mat, method = 'single')
typeof(dist_mat)
hir_clust <- hclust(dist_mat, method = 'single')
dist <- dist(heart_norm, method = "euclidean")
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist_mat, method = 'single')
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'single')
plot(hir_clust, cex = 0.6, hang = -1)
cut <- cutree(hir_clust, k = 8)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 23, col = 'blue')
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'ward.D2')
plot(hir_clust, cex = 0.6, hang = -1)
cut <- cutree(hir_clust, k = 8)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 23, col = 'blue')
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
# create distance matrix
dist_mat <- dist(heart_norm, method = "euclidean")
dist_mat <- as.matrix(dist_mat)
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = 'silhouette')
dist_mat <- as.matrix(dist_mat)
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_clust, h = 25))
abline(h = 23, col = 'blue')
rect.hclust(hir_clust, k = 2, border = 2:6)
cut <- cutree(hir_clust, k = 8)
plot(hir_clust, cex = 0.6, hang = -1)
hir_clust <- hclust(dist, method = 'ward.D2')
cut <- cutree(hir_clust, k = 8)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 23, col = 'blue')
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'ward.D2')
plot(hir_clust, cex = 0.6, hang = -1)
# cut <- cutree(hir_clust, k = 8)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 23, col = 'blue')
cluster_and_plot <- function(data, d_method = 'euclidean', k, height = 23 ) {
hir_clust <- hclust(data, method = d_method)
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = k, border = 2:6)
abline(h = 23, col = 'blue')
}
cluster_and_plot(dist_mat, d_method = 'euclidean', k = 2)
cluster_and_plot(dist_mat, k = 2)
cluster_and_plot <- function(data, d_method = "euclidean", k, height = 23 ) {
hir_clust <- hclust(data, method = d_method)
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = k, border = 2:6)
abline(h = 23, col = 'blue')
}
cluster_and_plot(dist_mat, d_method = "euclidean", k = 2)
cluster_and_plot(dist_mat, k = 2)
cluster_and_plot <- function(data, method = "euclidean", height = 23 ) {
hir_clust <- hclust(data, method = method)
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = k, border = 2:6)
abline(h = 23, col = 'blue')
}
cluster_and_plot(dist_mat, k = 2)
cluster_and_plot <- function(data, method = "euclidean", k, height = 23 ) {
hir_clust <- hclust(data, method = method)
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = k, border = 2:6)
abline(h = 23, col = 'blue')
}
cluster_and_plot(dist_mat, k = 2)
rm(cluster_and_plot)
library(tidyverse)
library(factoextra)
# read in the dataset
heart <- read.csv("heart-c.csv")
# create new dataframe with only continuous variables for kmeans and remove
# the index
heart <- heart %>% select(age, trestbps, chol,
thalach, oldpeak)
# create histograms of continuous data
heart %>% gather(attribute, value, 1:ncol(heart)) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "salmon1", color = "black") +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# normalise the data so as it sits within a similar range
heart_norm <- scale(heart) %>% as.data.frame
# visualise the sum of squared error to determine the initial
# optimum no. of clusters
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = "wss") +
geom_vline(xintercept = 2, linetype = 2) +
geom_vline(xintercept = 5, linetype = 2)
# visualise the silhouette scores to support elbow plot above
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = 'silhouette')
# run kmeans with 2 clusters and with 5
kmeans_2 <- kmeans(heart_norm, centers = 2)
kmeans_5 <- kmeans(heart_norm, centers = 5)
# visualise both models in 2D
fviz_cluster(kmeans_2, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 2 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
fviz_cluster(kmeans_5, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 5 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
# add cluster values to dataframes as factors
# Two Clusters
heart_clust_2 <- cbind(heart, 'Cluster' = kmeans_2$cluster)
heart_clust_2$Cluster <- as.factor(heart_clust_2$Cluster)
# Five Clusters
heart_clust_5 <- cbind(heart, 'Cluster' = kmeans_5$cluster)
heart_clust_5$Cluster <- as.factor(heart_clust_5$Cluster)
# plot histograms to show distribution across the clusters
heart_clust_2 %>% gather(attribute, value, 1:ncol(heart_clust_2)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
heart_clust_5 %>% gather(attribute, value, 1:ncol(heart_clust_5)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# Hierarchical Clustering
library(dendextend)
library(cluster)
# create distance matrix
dist_mat <- dist(heart_norm, method = "euclidean")
dist_mat <- as.matrix(dist_mat)
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = 'silhouette')
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'ward.D2')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 23, col = 'blue')
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend), h = 4)
plot(color_branches(hir_dend), h = 23)
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend), h = 23)
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'ward.D2')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 23, col = 'blue')
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend), h = 23)
View(hir_dend)
rm(hir_dend)
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend), h = 23)
plot(color_branches(hir_dend), h =300)
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend), h =300)
hir_clust <- hclust(dist, method = 'ward.D')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 23, col = 'blue')
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend), h =300)
plot(color_branches(hir_dend, k = 2))
plot(color_branches(hir_dend, k = 3))
plot(color_branches(hir_dend, k = 4))
# create distance matrix
dist_mat <- dist(heart_norm, method = "euclidean")
dist_mat <- as.matrix(dist_mat)
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = 'silhouette')
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'ward.D')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 23, col = 'blue')
abline(h = 80, col = 'blue')
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'ward.D')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 80, col = 'blue')
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend, k = 4))
plot(color_branches(hir_dend, k = 5))
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'complete')
# create distance matrix
dist_mat <- dist(heart_norm, method = "euclidean")
dist_mat <- as.matrix(dist_mat)
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = 'silhouette')
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'complete')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 80, col = 'blue')
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend, k = 5))
rm(hir_dend)
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'ward.D')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 80, col = 'blue')
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend, k = 5))
plot(color_branches(hir_dend, k = 2))
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'mcquitty')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 80, col = 'blue')
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'centroid')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 80, col = 'blue')
library(tidyverse)
library(factoextra)
# read in the dataset
heart <- read.csv("heart-c.csv")
# create new dataframe with only continuous variables for kmeans and remove
# the index
heart <- heart %>% select(age, trestbps, chol,
thalach, oldpeak)
# create histograms of continuous data
heart %>% gather(attribute, value, 1:ncol(heart)) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "salmon1", color = "black") +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# normalise the data so as it sits within a similar range
heart_norm <- scale(heart) %>% as.data.frame
# visualise the sum of squared error to determine the initial
# optimum no. of clusters
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = "wss") +
geom_vline(xintercept = 2, linetype = 2) +
geom_vline(xintercept = 5, linetype = 2)
# visualise the silhouette scores to support elbow plot above
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = 'silhouette')
# run kmeans with 2 clusters and with 5
kmeans_2 <- kmeans(heart_norm, centers = 2)
kmeans_5 <- kmeans(heart_norm, centers = 5)
# visualise both models in 2D
fviz_cluster(kmeans_2, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 2 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
fviz_cluster(kmeans_5, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 5 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
# add cluster values to dataframes as factors
# Two Clusters
heart_clust_2 <- cbind(heart, 'Cluster' = kmeans_2$cluster)
heart_clust_2$Cluster <- as.factor(heart_clust_2$Cluster)
# Five Clusters
heart_clust_5 <- cbind(heart, 'Cluster' = kmeans_5$cluster)
heart_clust_5$Cluster <- as.factor(heart_clust_5$Cluster)
# plot histograms to show distribution across the clusters
heart_clust_2 %>% gather(attribute, value, 1:ncol(heart_clust_2)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
heart_clust_5 %>% gather(attribute, value, 1:ncol(heart_clust_5)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# Hierarchical Clustering
library(dendextend)
library(cluster)
# create distance matrix
dist_mat <- dist(heart_norm, method = "euclidean")
dist_mat <- as.matrix(dist_mat)
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = 'silhouette')
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'centroid')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 80, col = 'blue')
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend, k = 2))
dist <- dist(heart_norm, method = "euclidean")
hir_clust <- hclust(dist, method = 'ward.D')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 80, col = 'blue')
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend, k = 2))
plot(color_branches(hir_dend, k = 2), main = 'test')
plot(color_branches(hir_dend, k = 2), main = 'Cluster Dendrogram - 2 Clusters')
rm(dist_mat)
rm(dist)
rm(hir_clust, hir_dend)
# create distance matrix
# a matrix for use with fviz_nbclust
dist_mat <- dist(heart_norm, method = "euclidean")
dist_mat <- as.matrix(dist_mat)
# use fviz_nbclust to view initial optimal clusters and silhouette plot
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = "wss")
fviz_nbclust(x = dist_mat, FUNcluster = hcut, method = 'silhouette')
hir_clust <- hclust(dist, method = 'ward.D')
rm(dist_mat, hir_clust, hir_dend)
# create distance matrix
# a matrix for use with fviz_nbclust
dist_1 <- dist(heart_norm, method = "euclidean") %>% as.matrix(dist_1)
source('~/Documents/GitHub/PMIM402---Machine-Learning-in-Healthcare/PMIM402 Assignment/KMeans_Clustering_2131572.R')
library(tidyverse)
library(factoextra)
# read in the dataset
heart <- read.csv("heart-c.csv")
# create new dataframe with only continuous variables for kmeans and remove
# the index
heart <- heart %>% select(age, trestbps, chol,
thalach, oldpeak)
# create histograms of continuous data
heart %>% gather(attribute, value, 1:ncol(heart)) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "salmon1", color = "black") +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# normalise the data so as it sits within a similar range
heart_norm <- scale(heart) %>% as.data.frame
# visualise the sum of squared error to determine the initial
# optimum no. of clusters
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = "wss") +
geom_vline(xintercept = 2, linetype = 2) +
geom_vline(xintercept = 5, linetype = 2)
# visualise the silhouette scores to support elbow plot above
fviz_nbclust(x = heart_norm, FUNcluster = kmeans, method = 'silhouette')
# run kmeans with 2 clusters and with 5
kmeans_2 <- kmeans(heart_norm, centers = 2)
kmeans_5 <- kmeans(heart_norm, centers = 5)
# visualise both models in 2D
fviz_cluster(kmeans_2, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 2 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
fviz_cluster(kmeans_5, geom = "point", pointsize = 2, data = heart_norm, main = 'Cluster Plot in 2D Space - 5 Clusters',
xlab = 'Dimension 1', ylab = 'Dimension 2')
# add cluster values to dataframes as factors
# Two Clusters
heart_clust_2 <- cbind(heart, 'Cluster' = kmeans_2$cluster)
heart_clust_2$Cluster <- as.factor(heart_clust_2$Cluster)
# Five Clusters
heart_clust_5 <- cbind(heart, 'Cluster' = kmeans_5$cluster)
heart_clust_5$Cluster <- as.factor(heart_clust_5$Cluster)
# plot histograms to show distribution across the clusters
heart_clust_2 %>% gather(attribute, value, 1:ncol(heart_clust_2)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
heart_clust_5 %>% gather(attribute, value, 1:ncol(heart_clust_5)-1) %>%
ggplot(aes(x = value, group = Cluster, fill = Cluster)) +
geom_histogram(alpha = 0.6, bins = 30, color = 'black') +
facet_wrap(~attribute, scales = 'free') +
theme_grey()
# Hierarchical Clustering
library(dendextend)
library(cluster)
# create distance matrix
# a matrix for use with fviz_nbclust
dist_1 <- dist(heart_norm, method = "euclidean") %>% as.matrix(dist_1)
# a vector for use with hclust
dist_2 <- dist(heart_norm, method = 'euclidean')
# use fviz_nbclust to view initial optimal clusters and silhouette plot
fviz_nbclust(x = dist_1, FUNcluster = hcut, method = "wss")
fviz_nbclust(x = dist_1, FUNcluster = hcut, method = 'silhouette')
# rm(dist_mat, hir_clust, hir_dend)
# Create hierarchical cluster model and plot
hir_clust <- hclust(dist, method = 'ward.D')
source('~/Documents/GitHub/PMIM402---Machine-Learning-in-Healthcare/PMIM402 Assignment/KMeans_Clustering_2131572.R')
heatmap(hir_clust, scale = 'none')
abline(h = 80, col = 'blue')
# rm(dist_mat, hir_clust, hir_dend)
# Create hierarchical cluster model and plot
hir_clust <- hclust(dist_1, method = 'ward.D')
# rm(dist_mat, hir_clust, hir_dend)
# Create hierarchical cluster model and plot
hir_clust <- hclust(dist_2, method = 'ward.D')
plot(hir_clust, cex = 0.6, hang = -1)
rect.hclust(hir_clust, k = 2, border = 2:6)
abline(h = 80, col = 'blue')
# plot hierarchical cluster with colour branches
hir_dend <- as.dendrogram(hir_clust)
plot(color_branches(hir_dend, k = 2), main = 'Cluster Dendrogram - 2 Clusters')
heatmap(dist_1, scale = 'none')
heatmap(dist_2, scale = 'none')
heatmap(dist_1, scale = 'none')
cluster <- cutree(hir_clust, 2)
dunn(dist_2, cluster)
?dunn
??dunn
library(clValid)
install.packages(clValid)
install.packages("clValid")
library(clValid)
dunn(dist_2, cluster)
